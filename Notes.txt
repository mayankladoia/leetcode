Hooks need to be defined in a PHP file that is guaranteed to be loaded by Drupal prior to the hook being invoked. If the function doesn't exist in memory at the time the hook is invoked it won't be executed. This makes .module files an easy choice since they are included on every request.

To find documentation for hooks provided contributed modules. Look for a MODULENAME.api.php file in the root directory of the module.

creating custom hooks
	naming convention: hook_module_name_descriptive_name()

global drupal object example: \Drupal::moduleHandler();


Abstract Method
	An abstract method is a method that is declared without an implementation

Abstract Class
	An abstract class has abstract method
	An abstract class can provide some functionality and leave the rest for derived class.
	"The derived class may or may not override the concrete functions defined in the base class."
	A class that extends Abstract class must implement the associated abstract method

Interface
	An interface cannot contain any functionality. It only contains definitions of the methods.
	"The derived class MUST provide code for all the methods defined in the interface."


public interface Pet {
    public void play();
}
class Animal {
    public void eat();
    public void sleep();
}
public class Camel extends Animal {

}
public class Dog extends Animal implements Pet {
    public void play() {...}
}